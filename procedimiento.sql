USE SIEMBRA_VALORES;
--Procedimientos almacenados
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE OR ALTER  FUNCTION [dbo].[OBTENER_FECHA] ()
RETURNS DATETIME
AS
BEGIN
    --RETURN GETDATE() AT TIME ZONE 'UTC' AT TIME ZONE 'Central Standard Time'
    --RETURN GETDATE() AT TIME ZONE 'UTC' AT TIME ZONE 'Pacific Standard Time'
    RETURN CAST(CAST(GETUTCDATE() AS DATETIMEOFFSET) AT TIME ZONE 'CENTRAL STANDARD TIME (MEXICO)' AS DATETIME)
END
GO

--INICIAR SESIÓN
DECLARE @CORREO VARCHAR(100)
DECLARE @CONTRASENA VARCHAR(50)
SELECT ID_US FROM USUARIO WHERE CORREO=@CORREO AND CONTRASENA COLLATE Latin1_General_CS_AS=@CONTRASENA

--ADOPTAR ÁRBOL
GO
CREATE OR ALTER PROCEDURE ADOPTA_ARBOL(@ID_US INT,@ID_ARBOL INT,@ID_VALOR INT)
AS
BEGIN
	IF EXISTS(SELECT 1 FROM ADOPTA WHERE ID_ARBOL=@ID_ARBOL)
	BEGIN
		INSERT INTO ADOPTA(ID_US,ID_ARBOL,FECHA_ADOPCION_INICIO,ALTURA,CIRCUNFERENCIA) VALUES(@ID_US,@ID_ARBOL,(SELECT DBO.OBTENER_FECHA()),(SELECT TOP 1 ALTURA FROM ADOPTA WHERE ID_ARBOL=@ID_ARBOL ORDER BY FECHA_ADOPCION_INICIO),(SELECT TOP 1 CIRCUNFERENCIA FROM ADOPTA WHERE ID_ARBOL=@ID_ARBOL ORDER BY FECHA_ADOPCION_INICIO DESC))
		
	END
	ELSE
	BEGIN
		INSERT INTO ADOPTA(ID_US,ID_ARBOL,FECHA_ADOPCION_INICIO,ALTURA,CIRCUNFERENCIA) VALUES(@ID_US,@ID_ARBOL,(SELECT DBO.OBTENER_FECHA()),0.0,0.0);
		UPDATE ARBOL SET ID_VALOR=@ID_VALOR WHERE ID_ARBOL=@ID_ARBOL
	END
END;

--INFORMACIÓN DEL ARBOL
DECLARE @ID_ARBOL_INFO INT;
DECLARE @ID_VALOR_INFO INT;
SET @ID_VALOR_INFO=(SELECT ID_VALOR FROM ARBOL WHERE ID_ARBOL=@ID_ARBOL_INFO);
IF @ID_VALOR_INFO IS NULL
BEGIN
	SELECT A.NOMBRE_CIENTIFICO,A.FECHA_PLANTADO,C.DESCRIPCION,C.FRECUENCIA FROM ARBOL A JOIN CUIDADOS C ON A.ID_ARBOL=C.ID_CUIDADOS WHERE A.ID_ARBOL=@ID_ARBOL_INFO
END
ELSE
BEGIN
	SELECT A.NOMBRE_CIENTIFICO,A.FECHA_PLANTADO,C.DESCRIPCION,C.FRECUENCIA,V.VALOR FROM ARBOL A JOIN CUIDADOS C ON A.ID_ARBOL=C.ID_CUIDADOS JOIN VALORES V ON A.ID_VALOR=V.ID_VALOR WHERE A.ID_ARBOL=@ID_ARBOL_INFO
END

--AGREGAR SERVICIO
GO
CREATE OR ALTER PROCEDURE AGREGAR_SERVICIO(@ID_ARBOL INT,@ID_SERVICIO INT,@COMENTARIOS VARCHAR(255),@ALTURA FLOAT,@CIRCUNFERENCIA FLOAT,@ID_USUARIO INT)
AS
BEGIN
	IF @ID_SERVICIO=9
	BEGIN
		INSERT INTO BRINDAN(ID_ARBOL,ID_SERVICIO,FECHA_SERVICIO,COMENTARIOS,ESTADO) VALUES(@ID_ARBOL,@ID_SERVICIO,(SELECT DBO.OBTENER_FECHA()),@COMENTARIOS,'BUENO');
		UPDATE ADOPTA SET CIRCUNFERENCIA=@CIRCUNFERENCIA,ALTURA=@ALTURA WHERE ID_ARBOL=@ID_ARBOL AND ID_US=@ID_USUARIO;
	END
	ELSE
	BEGIN
		INSERT INTO BRINDAN(ID_ARBOL,ID_SERVICIO,FECHA_SERVICIO,COMENTARIOS,ESTADO) VALUES(@ID_ARBOL,@ID_SERVICIO,(SELECT DBO.OBTENER_FECHA()),@COMENTARIOS,'BUENO');
	END
END;

--VER PERFIL
SELECT A.PUNTOS,U.NOMBRE,U.AP_P,U.AP_M,U.CORREO,U.FECHA_NAC FROM USUARIO U JOIN ALUMNO A ON U.ID_US=A.ID_US

--VER HISTORIAL DE SERVICIOS
DECLARE @ID_USUARIO_SERVICIOS INT;
SELECT S.TIPO,B.FECHA_SERVICIO,B.COMENTARIOS FROM SERVICIOS S JOIN BRINDAN B ON S.ID_SERVICIO=B.ID_SERVICIO JOIN ARBOL A 
ON A.ID_ARBOL=B.ID_ARBOL JOIN ADOPTA AD ON B.ID_ARBOL=AD.ID_ARBOL WHERE AD.ID_US=@ID_USUARIO_SERVICIOS;

--AGREGAR COLONIA
INSERT INTO COLONIA(NOMBRE,CIUDAD,COD_POSTAL,META,MINIMO_ARBOLES,FECHA_REGISTRO) VALUES(@NOMBRE,@CIUDAD,@COD_POSTAL,@META,@MINIMO_ARBOLES,(SELECT DBO.OBTENER_FECHA()))

--AGREGAR ESCUELA
INSERT INTO ESCUELA(NOMBRE,DIRECCION,NIVEL_EDUCATIVO,NUMERO_ARBOLES,ENCARGADO,ID_COL,FECHA_REGISTRO) VALUES(@NOMBRE,@DIRECCION,@NIVEL_EDUCATIO,@NUMERO_ARBOLES,@ENCARGADO,@ID_COL,(SELECT DBO.OBTENER_FECHA()))
--GENERAR NOTIFICACIONES AUTOMATICAMENTE
INSERT INTO NOTIFICACIONES (ID_US, ID_ARBOL, MENSAJE, FECHA_ENVIO)
SELECT 
    A.ID_US,
    A.ID_ARBOL,
    CONCAT('Es hora de realizar el cuidado: ', C.NOMBRE, ' para el árbol adoptado.'),
    (SELECT DBO.OBTENER_FECHA())
FROM 
    ADOPTA A
JOIN 
    CUIDADOS C ON A.ID_ARBOL = C.ID_CUIDADOS
LEFT JOIN 
    BRINDAN B ON A.ID_ARBOL = B.ID_ARBOL AND C.ID_CUIDADOS = B.ID_SERVICIO
WHERE 
    DATEDIFF(DAY, B.FECHA_SERVICIO, (SELECT DBO.OBTENER_FECHA())) >= 
    CASE 
        WHEN C.FRECUENCIA = 'Semanal' THEN 7
        WHEN C.FRECUENCIA = 'Quincenal' THEN 15
        WHEN C.FRECUENCIA = 'Mensual' THEN 30
        WHEN C.FRECUENCIA = 'Bimensual' THEN 60
        WHEN C.FRECUENCIA = 'Trimestral' THEN 90
        WHEN C.FRECUENCIA = 'Semestral' THEN 180
        WHEN C.FRECUENCIA = 'Anual' THEN 365
        ELSE 0
    END;

--ENVIAR NOTIFICACIONES
GO
CREATE OR ALTER PROCEDURE Enviar_NOTIFICACION
    @Mensaje VARCHAR(255),
	@ID_ALUMNO INT
AS
BEGIN
    INSERT INTO NOTIFICACIONES (ID_US, ID_ARBOL, MENSAJE, FECHA_ENVIO)
   VALUES(@ID_ALUMNO,(SELECT ID_ARBOL FROM ADOPTA WHERE ID_US=@ID_ALUMNO ORDER BY FECHA_ADOPCION_INICIO ASC OFFSET 0 ROWS FETCH NEXT 1 ROWS ONLY),@Mensaje,(SELECT DBO.OBTENER_FECHA()))
END;

--RECIBIR NOTIFICACIONES(ALUMNO)
DECLARE @ID_ALUMNO INT
SELECT 
    N.ID_NOTIFICACION,
    N.MENSAJE,
    N.FECHA_ENVIO,
    A.NOMBRE_CIENTIFICO AS Nombre_Arbol
FROM 
    NOTIFICACIONES N
JOIN 
    ADOPTA AD ON N.ID_ARBOL = AD.ID_ARBOL
JOIN 
    ARBOL A ON AD.ID_ARBOL = A.ID_ARBOL
WHERE 
    N.ID_US = @ID_ALUMNO 
    AND N.LEIDO = 0      
ORDER BY 
    N.FECHA_ENVIO DESC;  

--GENERAR REPORTES
GO
CREATE OR ALTER PROCEDURE GenerarReporte(
    @ID_Arbol INT,
    @ID_Usuario INT)
AS
BEGIN
    DECLARE @ID_Reporte INT;
    DECLARE @Altura DECIMAL(10, 2);
    DECLARE @Circunferencia DECIMAL(10, 2);
    DECLARE @Progreso VARCHAR(255);

    SELECT TOP 1 @Altura = ALTURA, @Circunferencia = CIRCUNFERENCIA
    FROM ADOPTA
    WHERE ID_ARBOL = @ID_Arbol AND ID_US = @ID_Usuario
    ORDER BY FECHA_ADOPCION_FIN DESC;

    SET @Progreso = CONCAT('La nueva circunferencia es: ', @Circunferencia, ' cm y la altura es: ', @Altura, ' cm.');

    INSERT INTO REPORTES (FECHA, PROGRESO, ID_ARBOL)
    VALUES ((SELECT DBO.OBTENER_FECHA()), @Progreso, @ID_Arbol);

    SET @ID_Reporte = SCOPE_IDENTITY();

    INSERT INTO GENERA (ID_US, ID_REPORTE)
    VALUES (@ID_Usuario, @ID_Reporte);

    SELECT 
        R.ID_REPORTE AS ID_Reporte,
        R.FECHA AS Fecha,
        R.PROGRESO AS Progreso,
        A.ID_ARBOL AS ID_Arbol,
        A.NOMBRE_CIENTIFICO AS Nombre_Cientifico,
        AD.ALTURA AS Altura,
        AD.CIRCUNFERENCIA AS Circunferencia,
        U.ID_US AS ID_Usuario,
        U.NOMBRE AS Nombre_Usuario,
        U.AP_P AS Apellido_Paterno,
        U.AP_M AS Apellido_Materno,
        C.NOMBRE AS Nombre_Colonia
    FROM 
        REPORTES R
    JOIN 
        GENERA G ON R.ID_REPORTE = G.ID_REPORTE
    JOIN 
        USUARIO U ON G.ID_US = U.ID_US
    JOIN 
        ARBOL A ON R.ID_ARBOL = A.ID_ARBOL
	JOIN 
		ADOPTA AD ON U.ID_US=AD.ID_US
    JOIN 
        Colonia C ON A.ID_COL = C.ID_COL
    WHERE 
        R.ID_REPORTE = @ID_Reporte;
END;
EXEC GENERARREPORTE 8,19
SELECT * FROM ADMINISTRADOR

--AGREGAR USUARIO
GO
CREATE OR ALTER PROCEDURE ALTA_ALUMNO(@CORREO VARCHAR(100),@CONTRASENA VARCHAR(50),@CELULAR VARCHAR(16),@FECHA_NAC DATE,@NOMBRE VARCHAR(50),@AP_P VARCHAR(50),@AP_M VARCHAR(50),
@ID_ESCUELA INT,@ID_COL INT)
AS
BEGIN
	INSERT INTO USUARIO(FECHA_REGISTRO,NOMBRE,AP_P,AP_M,CORREO,CELULAR,FECHA_NAC,CONTRASENA,ACTIVO,ID_COL) VALUES((SELECT DBO.OBTENER_FECHA()),@NOMBRE,@AP_P,@AP_M,@CORREO,@CELULAR,@FECHA_NAC,@CONTRASENA,1,@ID_COL)	
	DECLARE @ID_USUARIO_REGISTRO INT;
	SET @ID_USUARIO_REGISTRO=SCOPE_IDENTITY();
	INSERT INTO ALUMNO(ID_US,PUNTOS,ID_ESCUELA) VALUES(@ID_USUARIO_REGISTRO,0,@ID_ESCUELA)
END;
--DAR DE BAJA
DECLARE @ID_USUARIO_BAJA INT
UPDATE USUARIO SET ACTIVO=0 WHERE ID_US=@ID_USUARIO_BAJA;

--AGREGAR ARBOLES
GO
CREATE OR ALTER PROCEDURE ALTA_ARBOLES
    @NOMBRE_CIENTIFICO VARCHAR(50),
    @FECHA_PLANTADO DATE,
    @ENDEMICO BIT,
    @ID_COL INT
AS
BEGIN
    INSERT INTO ARBOL (NOMBRE_CIENTIFICO, FECHA_PLANTADO, ENDEMICO, ID_VALOR, ID_COL, FECHA_REGISTRO)
    VALUES (@NOMBRE_CIENTIFICO, @FECHA_PLANTADO, @ENDEMICO, NULL, @ID_COL, (SELECT DBO.OBTENER_FECHA()));
END;


--REALIZAR MISIONES
UPDATE ALUMNO SET PUNTOS=@PUNTOS WHERE ID_US=@ID_US;